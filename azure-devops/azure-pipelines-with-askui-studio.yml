rigger:
- master

jobs:
  - job: RunAskUI
    continueOnError: false
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: DockerInstaller@0
        inputs:
          dockerVersion: '17.09.0-ce'
      - bash: |
          cat << EOF > config.yaml
              access_token: $(ASKUI_TOKEN)
              inference_server_url: $(ASKUI_INFERENCE_SERVER_URL)
              workspace_id: $(ASKUI_WORKSPACE_ID)
              workflow_endpoint:
                  prefixes:
                      - workspaces/$(ASKUI_WORKSPACE_ID)/test-cases
                  url: $(ASKUI_WORKFLOW_ENDPOINT_URL)/workspaces/$(ASKUI_WORKSPACE_ID)/objects
          EOF
          echo "$(DOCKER_PASSWORD)" | docker login --username $(DOCKER_USERNAME) --password-stdin
          docker run --shm-size="2g" --rm -v "/$(pwd)/config.yaml:/home/askui/config.yaml" -v "/$(pwd)/allure-results:/home/askui/test_project/allure-results" askuigmbh/askui-runner:v0.13.1-github
        displayName: 'Run AskUI'
      - bash: |
          curl -o allure-commandline-2.10.0.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.10.0/allure-commandline-2.10.0.tgz
          sudo tar -zxf allure-commandline-2.10.0.tgz -C .
          echo "Creating allure-report"
          ./allure-2.10.0/bin/allure generate allure-results -o allure-report
          echo "allure-report created"
      # Install https://github.com/mclay/azure-pipeline-allure-report first
      - task: PublishAllureReport@1
        displayName: 'Publish Allure Report'
        inputs:
          reportDir: 'allure-report'
